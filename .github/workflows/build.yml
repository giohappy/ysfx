name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '[0-9]*'
      - 'v[0-9]*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to build'
        required: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: win64
            display-name: Windows 64-bit
            runs-on: windows-2019
            platform: x64
            release-arch: x64
            cmake-generator: Visual Studio 16 2019
            os-type: Windows
            shell: pwsh
            artifacts: yes
      fail-fast: false
    name: Compile for ${{matrix.display-name}}
    runs-on: ${{matrix.runs-on}}
    defaults:
      run:
        shell: ${{matrix.shell}}
    env:
      name: ${{matrix.name}}
      display_name: ${{matrix.display-name}}
      platform: ${{matrix.platform}}
      release_arch: ${{matrix.release-arch}}
      cmake_generator: ${{matrix.cmake-generator}}
      build_type: Release
      num_jobs: 2
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies (Linux)
      - uses: ilammy/setup-nasm@v1
        if: ${{matrix.os-type == 'Windows'}}
      - name: Create Build Directory
        working-directory: ${{runner.workspace}}
        run: cmake -E make_directory build
      - name: Configure CMake (Windows)
        if: ${{matrix.os-type == 'Windows'}}
        working-directory: ${{runner.workspace}}/build
        run: cmake "${Env:GITHUB_WORKSPACE}" -G"${Env:cmake_generator}" -A"${Env:release_arch}" -DCMAKE_BUILD_TYPE="${Env:build_type}" -DYSFX_TESTS=ON
      - name: Build tests (Windows)
        if: ${{matrix.os-type == 'Windows'}}
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config "${Env:build_type}" --target ysfx_tests -j "${Env:num_jobs}"
      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: ctest --output-on-failure
      - name: Build all (Windows)
        if: ${{matrix.os-type == 'Windows'}}
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config "${Env:build_type}" -j "${Env:num_jobs}"
      - uses: actions/upload-artifact@v2
        if: ${{matrix.artifacts == 'yes'}}
        with:
          name: ${{matrix.display-name}} VST3
          path: "${{runner.workspace}}/build/*_artefacts/${{env.build_type}}/VST3/*.vst3"
